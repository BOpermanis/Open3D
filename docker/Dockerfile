FROM ubuntu:20.04

# Export ARG to ENV
ARG CMAKE_VER=cmake-3.19.7-Linux-x86_64

# Non-interactive dpkg
ARG DEBIAN_FRONTEND=noninteractive

# Open3D dependencies
RUN apt-get update && apt-get install -y \
    apt-utils  \
    autoconf \
    build-essential \
    ccache \
    clang-7 \
    git  \
    libblas-dev  \
    libc++-7-dev \
    libc++abi-7-dev \
    libglu1-mesa-dev \
    liblapack-dev  \
    liblapacke-dev \
    libosmesa6-dev \
    libsdl2-dev \
    libtbb-dev \
    libtool \
    libudev-dev \
    libxi-dev \
    ninja-build \
    wget \
    xorg-dev \
    && rm -rf /var/lib/apt/lists/*

# No virtual environment is needed, default to python 3.6
RUN apt-get update && apt-get install -y \
    python3 \
    python3-dev \
    python3-pip \
    python3-setuptools \
    && rm -rf /var/lib/apt/lists/*
RUN ln -s /usr/bin/python3 /usr/local/bin/python \
    && ln -s /usr/bin/python3-config /usr/local/bin/python-config \
    && ln -s /usr/bin/pip3 /usr/local/bin/pip

# Python dependencies
RUN python -m pip install -U \
    pip=="20.2.4" \
    wheel=="0.35.1" \
    setuptools=="50.3.2" \
    yapf=="0.30.0" \
    pytest=="6.0.1" \
    scipy=="1.5.4" \
    wheel=="0.35.1"

# CMake
# PWD is /, camke will be installed to /root/${CMAKE_VER}/bin/cmake
RUN CMAKE_VER_NUMBERS=$(echo "${CMAKE_VER}" | cut -d"-" -f2) \
    && wget https://github.com/Kitware/CMake/releases/download/v${CMAKE_VER_NUMBERS}/${CMAKE_VER}.tar.gz \
    && tar -xf ${CMAKE_VER}.tar.gz \
    && cp -ar ${CMAKE_VER} ${HOME}
ENV PATH=${HOME}/${CMAKE_VER}/bin:${PATH}

# `docker build` should be executed in the Open3D root dir
COPY . /root/Open3D

# `docker build` will build Open3D. The unit tests will be executed later in
# during `docker run`
WORKDIR /root/Open3D
RUN mkdir build \
    && cd build \
    && cmake \
    -DUSE_BLAS=ON \
    -DCMAKE_BUILD_TYPE=Release \
    -DBUILD_SHARED_LIBS=ON \
    -DBUILD_GUI=ON \
    -DCMAKE_C_COMPILER=gcc \
    -DCMAKE_CXX_COMPILER=g++ \
    -DBUILD_FILAMENT_FROM_SOURCE=OFF \
    -DBUILD_TENSORFLOW_OPS=OFF \
    -DBUILD_PYTORCH_OPS=OFF \
    -DBUILD_UNIT_TESTS=ON \
    -DCMAKE_INSTALL_PREFIX=~/open3d_install \
    -DPYTHON_EXECUTABLE="$(which python3)" \
    .. \
    && make -j$(nproc) \
    && make install-pip-package -j$(nproc)
