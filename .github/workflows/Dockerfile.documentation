# The following arguments are required for docker build
# - BASE_IMAGE
# - CMAKE_VER
# - CCACHE_TAR_NAME
#
# For example, you can run docker build with the following arguments
# - OpenBLAS X86_64
#   docker build --build-arg BASE_IMAGE=ubuntu:20.04 \
#                --build-arg CMAKE_VER=cmake-3.19.7-Linux-x86_64 \
#                --build-arg CCACHE_TAR_NAME=open3d-x86_64-ci-ccache
# - OpenBLAS ARM64
#   docker build --build-arg BASE_IMAGE=arm64v8/ubuntu:20.04 \
#                --build-arg CMAKE_VER=cmake-3.19.7-Linux-aarch64 \
#                --build-arg CCACHE_TAR_NAME=open3d-arm64-ci-ccache

FROM ubuntu:20.04

# Non-interactive dpkg
ARG DEBIAN_FRONTEND=noninteractive
ARG DEVELOPER_BUILD=ON

# Basic dependencies
RUN apt-get update && apt-get install -y \
    git \
    libgl1 \
    libgomp1 \
    libusb-1.0-0 \
    python3-pip \
 && rm -rf /var/lib/apt/lists/*

# No virtual environment is needed, default to python 3.6
RUN apt-get update && apt-get install -y \
    python3 \
    python3-dev \
    python3-pip \
    python3-setuptools \
 && rm -rf /var/lib/apt/lists/*
RUN ln -s /usr/bin/python3 /usr/local/bin/python \
 && ln -s /usr/bin/python3-config /usr/local/bin/python-config \
 && ln -s /usr/bin/pip3 /usr/local/bin/pip

# `docker build` should be executed from the Open3D root dir.
COPY . /root/Open3D

# Checkout Open3D-ML master branch.
# We may add support for local Open3D-ML repo in the future.
ENV OPEN3D_ML_ROOT=/root/Open3D-ML
RUN git clone --recursive https://github.com/intel-isl/Open3D-ML.git ${OPEN3D_ML_ROOT}

# Install dependencies
WORKDIR /root/Open3D
RUN source util/ci_utils.sh \
 && install_docs_dependencies

# Build docs
RUN source util/ci_utils.sh \
 && build_docs ${DEVELOPER_BUILD}

# # Compress ccache folder, move to / directory (optional)
# RUN ccache -s \
#  && CCACHE_DIR=$(ccache -p | grep cache_dir | grep -oE "[^ ]+$") \
#  && CCACHE_DIR_NAME=$(basename ${CCACHE_DIR}) \
#  && CCACHE_DIR_PARENT=$(dirname ${CCACHE_DIR}) \
#  && cd ${CCACHE_DIR_PARENT} \
#  && tar -czf ${CCACHE_TAR_NAME}.tar.gz ${CCACHE_DIR_NAME} \
#  && mv ${CCACHE_TAR_NAME}.tar.gz /
